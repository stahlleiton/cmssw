import FWCore.ParameterSet.Config as cms

metAna = cms.EDAnalyzer(
    'HiMETAnalyzer',
    patMETTag      = cms.InputTag("slimmedMETs"),
    pfMETTag       = cms.InputTag("pfMet"),
    caloMETTag     = cms.InputTag("caloMetM"),
    genMETTag      = cms.InputTag("genMetTrue"),
    doAll          = cms.bool(False),
    eventFilter    = cms.string("anaPath"),
    corrections    = cms.vstring(
        "Type1", 
        "Type01", 
        "TypeXY", 
        "Type1XY", 
        "Type01XY", 
        "Type1Smear", 
        "Type01Smear", 
        "Type1SmearXY", 
        "Type01SmearXY",
        ),
    metFilters     = cms.vstring(
        "collisionEventSelectionPA",
        "collisionEventSelectionPA_rejectPU",
        "duplicateMuons",
        "badMuons",
        "badTrackerMuons",
        "noBadMuons",
        "HBHENoiseFilter",
        "HBHENoiseFilterRun1",
        "HBHENoiseFilterRun2Loose",
        "HBHENoiseFilterRun2Tight",
        "HBHENoiseIsoFilter",
        "CSCTightHaloFilter",
        "CSCTightHaloTrkMuUnvetoFilter",
        "CSCTightHalo2015Filter",
        "globalTightHalo2016Filter",
        "globalSuperTightHalo2016Filter",
        "HcalStripHaloFilter",
        "ecalLaserCorrFilter",
        "hcalLaserEventFilter",
        "EcalDeadCellTriggerPrimitiveFilter",
        "EcalDeadCellBoundaryEnergyFilter",
        "goodVertices",
        "eeBadScFilter",
        "trkPOGFilters",
        "chargedHadronTrackResolutionFilter",
        "muonBadTrackFilter",
        "trkPOG_manystripclus53X",
        "trkPOG_toomanystripclus53X",
        "trkPOG_logErrorTooManyClusters",
        "METFilters"
        "trackingFailureFilter", 
        "BadChargedCandidateFilter", 
        "BadPFMuonFilter", 
        "BadChargedCandidateSummer16Filter", 
        "BadPFMuonSummer16Filter",
        ),
    )

metAnaSeq = cms.Sequence( metAna )
