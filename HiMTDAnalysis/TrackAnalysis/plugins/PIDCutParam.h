#include <map>
#include <string>

std::map<std::string, std::map<std::string, std::map<std::string, std::map<std::string, std::string> > > > FUNCMAP_ =
  {
   // BTL region
   { "BTL",
     {
      { "Deuteron",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(1.9808*(1+3.04914/x/x+0.528004*log(x)/x/x+0.0763514*log(x)),8.000),2.397)" },
	    { "Error", "min(0.287529*(1.+-0.529079/x+3.07488/x/x),1.200)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(1.78635*(1+1.99453/x/x+3.75259*log(x)/x/x+0.167648*log(x)),8.000),2.652)" },
	    { "Error", "min(0.344971*(1.+-0.199045/x+1.72847/x/x),1.200)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(2.3497*(1+2.44027/x/x+0.641195*log(x)/x/x+0.0655236*log(x)),8.000),2.775)" },
	    { "Error", "min(0.391412*(1.+0.0472947/x+0.991108/x/x),1.200)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(1.9243*1.9243+x*x)+-0.00834103*log(x))/x" },
	    { "Error", "min(0.570848*(1+log(x)*(-0.676669+-0.00612657*x*x)+0.0336625*x*x)/x/x,0.200)" },
	   }
	 },
        }
      },
      { "Helium3",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(5.7271*(1+0.226018/x/x+0.269339*log(x)/x/x+0.0136892*log(x)),8.000),5.886)" },
	    { "Error", "min(0.834943*(1.+-0.340727/x+1.22985/x/x),2.000)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(6.35419*(1+0.246456/x/x+0.164891*log(x)/x/x+0.00864811*log(x)),8.000),6.429)" },
	    { "Error", "min(0.830664*(1.+-0.162504/x+0.967075/x/x),2.000)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(6.52154*(1+0.254197/x/x+0.10135*log(x)/x/x+0.00526008*log(x)),8.000),6.563)" },
	    { "Error", "min(0.852538*(1.+-0.0372467/x+0.885358/x/x),2.000)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(1.48006*1.48006+x*x)+-0.00962437*log(x))/x" },
	    { "Error", "min(0.326618*(1+log(x)*(-0.644012+-0.004722*x*x)+0.0313795*x*x)/x/x,0.200)" },
	   }
	 },
        }
      },
      { "Helium4",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(5.47554*(1+0.304793/x/x+0.662849*log(x)/x/x+0.0293849*log(x)),8.000),5.896)" },
	    { "Error", "min(0.82456*(1.+-0.0833118/x+1.12366/x/x),2.000)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(6.11916*(1+0.339665/x/x+0.506355*log(x)/x/x+0.020917*log(x)),8.000),6.427)" },
	    { "Error", "min(0.818258*(1.+0.0873901/x+0.812043/x/x),2.000)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(6.24186*(1+0.364597/x/x+0.477133*log(x)/x/x+0.0198016*log(x)),8.000),6.530)" },
	    { "Error", "min(0.853848*(1.+-0.003742/x+1.13844/x/x),2.000)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(1.9307*1.9307+x*x)+-0.00984431*log(x))/x" },
	    { "Error", "min(0.55763*(1+log(x)*(-0.61738+-0.0039196*x*x)+0.0227259*x*x)/x/x,0.200)" },
	   }
	 },
        }
      },
      { "Kaon",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(2.71746*(1+0.54665/x/x+0.266502*log(x)/x/x+-0.0142848*log(x)+-0.549948/x),6.339),2.414)" },
	    { "Error", "min(0.250267*(1.+-0.0487098/x+0.414571/x/x),1.200)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(3.05781*(1+0.622906/x/x+0.306191*log(x)/x/x+-0.021362*log(x)+-0.620844/x),7.652),2.652)" },
	    { "Error", "min(0.306794*(1.+0.106329/x+0.192776/x/x),1.200)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(3.13671*(1+0.598312/x/x+0.294986*log(x)/x/x+-0.0215902*log(x)+-0.589126/x),7.765),2.746)" },
	    { "Error", "min(0.333817*(1.+0.247407/x+0.112658/x/x),1.200)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(0.498*0.498+x*x)+-0.00538736*log(x))/x" },
	    { "Error", "min(0.0597866*(1+log(x)*(-0.572429+0.00420586*x*x)+0.0829537*x*x)/x/x,0.050)" },
	   }
	 },
        }
      },
      { "Pion",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(2.51615*(1+0.00168829*x),3.650),2.497)" },
	    { "Error", "min(0.251562*(1.+0.205485/(x+0.418337)),0.328)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(2.7722*(1+0.00154907*x),4.049),2.753)" },
	    { "Error", "min(0.308215*(1.+0.233554/(x+0.803328)),0.392)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(2.86187*(1+0.00112224*x),4.169),2.848)" },
	    { "Error", "min(0.336698*(1.+0.264361/(x+0.246115)),0.462)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "sqrt(0.99782+0.02/x/x)" },
	    { "Error", "min(0.0058349*(1+-0.00715926*x),0.200)" },
	   }
	 },
        }
      },
      { "Proton",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(2.57607*(1+1.12471/x/x+0.451756*log(x)/x/x+-0.00212141*log(x)+-0.647428/x),7.874),2.418)" },
	    { "Error", "min(0.134506*(1.+3.69/x+-1.44455/x/x+-2.12325*log(x)/x/x+0.198404*log(x)),1.200)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(2.85258*(1+1.11726/x/x+0.55705*log(x)/x/x+-0.00516466*log(x)+-0.676331/x),8.000),2.549)" },
	    { "Error", "min(0.0840796*(1.+11.2032/x+-6.57942/x/x+-6.18734*log(x)/x/x+0.714086*log(x)),1.200)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(3.22163*(1+1.35371/x/x+0.949146*log(x)/x/x+-0.0297872*log(x)+-1.06483/x),8.000),2.717)" },
	    { "Error", "min(0.0704652*(1.+16.3547/x+-10/x/x+-8.17398*log(x)/x/x+1.02578*log(x)),1.200)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(1.00296*1.00296+x*x)+-0.00700595*log(x))/x" },
	    { "Error", "min(0.176473*(1+log(x)*(-0.597398+-0.003021*x*x)+0.0406312*x*x)/x/x,0.200)" },
	   }
	 },
        }
      },
      { "Triton",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(1.61065*(1+4.67335/x/x+5*log(x)/x/x+0.153811*log(x)),8.000),2.402)" },
	    { "Error", "min(0.286082*(1.+-0.671018/x+5.73711/x/x),1.200)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(1.84317*(1+4.10117/x/x+4.66634*log(x)/x/x+0.139276*log(x)),8.000),2.649)" },
	    { "Error", "min(0.340319*(1.+-0.190423/x+3.47185/x/x),1.200)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(1.9983*(1+3.79103/x/x+4.08498*log(x)/x/x+0.121914*log(x)),8.000),2.759)" },
	    { "Error", "min(0.397268*(1.+-0.272488/x+2.81971/x/x),1.200)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(2.89702*2.89702+x*x)+-0.0128797*log(x))/x" },
	    { "Error", "min(1.3385*(1+log(x)*(-0.675834+-0.00559454*x*x)+0.0248948*x*x)/x/x,0.200)" },
	   }
	 },
        }
      },
     }
   },
   // ETL region
   { "ETL",
     {
      { "Deuteron",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(2.02365*(1+0.417784/x/x+1.04079*log(x)/x/x+0.0427611*log(x)),4.540),2.270)" },
	    { "Error", "min(0.125967*(1.+-1.07416/x+4.85541/x/x),1.200)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(2.21788*(1+1.32189/x/x+0.454866*log(x)/x/x+0.0390408*log(x)),6.083),2.460)" },
	    { "Error", "min(0.18693*(1.+-1.93854/x+10.6966/x/x),1.200)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(2.28564*(1+1.30554/x/x+0.60955*log(x)/x/x+0.0445704*log(x)),7.489),2.557)" },
	    { "Error", "min(0.248416*(1.+-0.84337/x+4.93113/x/x),1.200)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(1.92222*1.92222+x*x)+-0.0057634*log(x))/x" },
	    { "Error", "min(0.671476*(1+log(x)*(-0.638549+-0.00436183*x*x)+0.0204005*x*x)/x/x,0.200)" },
	   }
	 },
        }
      },
      { "Helium3",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(2.96491*(1+0.0668742/x/x+0.126987*log(x)/x/x+-0.000367609*log(x)),4.530),2.930)" },
	    { "Error", "min(0.325009*(1.+0.206957/x+0.721684/x/x),1.200)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(4.05737*(1+0.248703/x/x+0.0405607*log(x)/x/x+-0.00277824*log(x)),8.000),3.915)" },
	    { "Error", "min(0.833724*(1.+-0.0074104/x+1.15043/x/x),1.200)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(4.54317*(1+0.259558/x/x+-0.0986679*log(x)/x/x+-0.00816346*log(x)),8.000),4.351)" },
	    { "Error", "min(0.700026*(1.+-0.113601/x+1.70618/x/x),1.200)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(1.43402*1.43402+x*x)+-0.00365769*log(x))/x" },
	    { "Error", "min(0.389861*(1+log(x)*(-0.71582+-0.00689485*x*x)+0.0317713*x*x)/x/x,0.200)" },
	   }
	 },
        }
      },
      { "Helium4",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(2.87873*(1+0.108333/x/x+0.354692*log(x)/x/x+0.00984285*log(x)),5.029),2.908)" },
	    { "Error", "min(0.336865*(1.+-0.247342/x+2.27412/x/x),1.200)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(3.88035*(1+0.361886/x/x+0.409945*log(x)/x/x+0.0125694*log(x)),6.801),3.967)" },
	    { "Error", "min(0.83882*(1.+-0.174172/x+2.03553/x/x),1.200)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(4.43462*(1+0.283416/x/x+0.221346*log(x)/x/x+-0.000509253*log(x)),7.129),4.371)" },
	    { "Error", "min(0.680654*(1.+0.277782/x+1.10524/x/x),1.200)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(1.91591*1.91591+x*x)+-0.00623441*log(x))/x" },
	    { "Error", "min(0.660777*(1+log(x)*(-0.639845+-0.00455637*x*x)+0.0209483*x*x)/x/x,0.200)" },
	   }
	 },
        }
      },
      { "Kaon",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(2.29475*(1+0.0859388/x/x+-0.0568368*log(x)/x/x+0.00247868*log(x)+-0.0155542/x),3.889),2.284)" },
	    { "Error", "min(0.0929215*(1.+1/x+-7.28306e-14/x/x),0.240)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(2.46719*(1+0.0291698/x/x+-0.127896*log(x)/x/x+0.00027875*log(x)+0.0755893/x),4.655),2.464)" },
	    { "Error", "min(0.142562*(1.+1/x+-0.0320987/x/x),0.355)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(2.76299*(1+0.293392/x/x+0.126549*log(x)/x/x+-0.0153309*log(x)+-0.266153/x),4.830),2.580)" },
	    { "Error", "min(0.217452*(1.+0.454812/x+-0.020113/x/x),0.356)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(0.484759*0.484759+x*x)+-0.000754559*log(x))/x" },
	    { "Error", "min(0.0574527*(1+log(x)*(-0.900189+-0.0120083*x*x)+0.101024*x*x)/x/x,0.050)" },
	   }
	 },
        }
      },
      { "Pion",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(2.32851*(1+-0.000107041*x),3.446),2.316)" },
	    { "Error", "min(0.0835117*(1.+2.43969/(x+2.1763)),0.464)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(2.52979*(1+-0.000844764*x),3.840),2.478)" },
	    { "Error", "min(0.139318*(1.+2.09899/(x+2.60452)),0.500)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(2.6476*(1+-0.000392631*x),3.806),2.596)" },
	    { "Error", "min(0.213722*(1.+1.50318/(x+5.30145)),1.200)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "sqrt(0.999892+0.02/x/x)" },
	    { "Error", "min(0.00358874*(1+0.000510067*x),0.200)" },
	   }
	 },
        }
      },
      { "Proton",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(2.41061*(1+0.576358/x/x+0.42246*log(x)/x/x+-0.0105062*log(x)+-0.426492/x),4.137),2.276)" },
	    { "Error", "min(0.0837366*(1.+7.08072/x+-3.84736/x/x+-10*log(x)/x/x+-0.0554572*log(x)),1.200)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(2.65552*(1+0.615886/x/x+0.242255*log(x)/x/x+-0.0197954*log(x)+-0.368619/x),5.709),2.448)" },
	    { "Error", "min(0.212999*(1.+0.205434/x+1.23416/x/x+-0.861973*log(x)/x/x+-0.113681*log(x)),1.200)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(2.741*(1+0.619248/x/x+0.267052*log(x)/x/x+-0.014022*log(x)+-0.368706/x),5.462),2.555)" },
	    { "Error", "min(0.248343*(1.+0.630596/x+0.343816/x/x+-1.08062*log(x)/x/x+-0.0475957*log(x)),1.200)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(0.940873*0.940873+x*x)+-0.000755028*log(x))/x" },
	    { "Error", "min(0.173863*(1+log(x)*(-0.762301+-0.00792258*x*x)+0.0473366*x*x)/x/x,0.200)" },
	   }
	 },
        }
      },
      { "Triton",
        {
         { "dEdx",
	   {
	    { "Mean", "max(min(1.91453*(1+-0.539142/x/x+3.13504*log(x)/x/x+0.0570723*log(x)),4.235),2.269)" },
	    { "Error", "min(0.129821*(1.+-2.02076/x+11.4308/x/x),1.200)" },
	   }
	 },
         { "dEdx1",
	   {
	    { "Mean", "max(min(1.99817*(1+1.0636/x/x+2.99777*log(x)/x/x+0.0715071*log(x)),6.326),2.452)" },
	    { "Error", "min(0.185179*(1.+-2.87307/x+24.3419/x/x),1.200)" },
	   }
	 },
         { "dEdx2",
	   {
	    { "Mean", "max(min(2.1167*(1+1.40229/x/x+2.74988*log(x)/x/x+0.0661679*log(x)),6.171),2.558)" },
	    { "Error", "min(0.236109*(1.+-0.559392/x+9.62858/x/x),1.200)" },
	   }
	 },
         { "invBeta",
	   {
	    { "Mean", "(sqrt(2.92003*2.92003+x*x)+-0.0107702*log(x))/x" },
	    { "Error", "min(1.14678*(1+log(x)*(-0.478909+-0.000637179*x*x)+0.00623332*x*x)/x/x,0.200)" },
	   }
	 },
        }
      },
     }
   },
  };
